/*auto-generated*/module.exports={"./dao3/__init__.js":"const defineProperty = function (obj, property) {\n    return Sk.misceval.callsimOrSuspend(Sk.builtins.property, new Sk.builtin.func(function (self) {\n        if (typeof obj === 'function') {\n            return obj(self)\n        } else {\n            return Sk.ffi.remapToPy(self[obj][property])\n        }\n    }), new Sk.builtin.func(function (self, val) {\n        if (typeof property === 'function') {\n            property(self, val)\n        } else {\n            self[obj][property] = val.v;\n        }\n    }))\n}\n\nconst wrapObj = function (obj, mod) {\n    return Sk.ffi.proxy(obj);\n}\n\nfunction genkwaFunc(func, isJsArgs) {\n    const kwaFunc = function (kwa, ...args) {\n        if (!isJsArgs) {\n            args = new Sk.builtins['tuple'](args); /*vararg*/\n        }\n        const kwargs = new Sk.builtin.dict(kwa);\n        return func(args, kwargs)\n    }\n    kwaFunc['co_kwargs'] = true;\n    return kwaFunc;\n}\n\nconst wrapFunc = function (func, mod) {\n    return Sk.ffi.toPy(func);\n}\n\nconst wrapClass = function (class_, mod) {\n    return Sk.ffi.proxy(class_)\n}\n\nvar $builtinmodule = function (name) {\n    var mod = {};\n\n    // utils\n    mod.utils=Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function ($gbl1, $loc1) {\n        $loc1.js=Sk.misceval.callsimOrSuspend(Sk.misceval.buildClass(mod, function ($gbl, $loc) {\n            $loc.eval=new Sk.builtin.func(function(self,code){\n                return Sk.ffi.remapToPy(eval(code.v));\n            });\n        }));\n    }));\n\n    mod.world = wrapObj(world, mod);\n    mod.voxels = wrapObj(voxels, mod);\n    mod.http = wrapObj(http, mod);\n    mod.resources = wrapObj(resources, mod);\n    for (let k of Object.keys(global)) {\n        if (k.startsWith(\"Game\")) {\n            mod[k] = wrapClass(global[k], mod);\n        }\n    }\n    return mod;\n};"}